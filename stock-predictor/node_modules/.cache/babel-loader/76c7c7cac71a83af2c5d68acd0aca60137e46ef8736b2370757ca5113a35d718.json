{"ast":null,"code":"var _jsxFileName = \"/home/onizuka/Documents/Project M1/stock-predictor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please upload a file\");\n      return;\n    }\n    setError(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8000/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Log the response for debugging\n      console.log('Predictions:', response.data);\n\n      // Set predictions for rendering\n      setPredictions(response.data);\n    } catch (err) {\n      // Log detailed error information for debugging\n      console.error('Error uploading file or running predictions:', err);\n\n      // Handle different types of errors (network, server, etc.)\n      if (err.response) {\n        // The server responded with a status other than 2xx\n        setError(`Server Error: ${err.response.data.error || 'Unknown error'}`);\n      } else if (err.request) {\n        // The request was made, but no response was received\n        setError('Network Error: No response from server.');\n      } else {\n        // Something else caused the error\n        setError(`Error: ${err.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload and Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Predictions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), predictions.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: predictions.map((pred, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: pred.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: pred.signal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No predictions yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UwnGQR6Vs/ctCOxFWSE5GbU1FUU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","predictions","setPredictions","error","setError","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","post","headers","console","log","data","err","request","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","length","map","pred","index","timestamp","signal","_c","$RefreshReg$"],"sources":["/home/onizuka/Documents/Project M1/stock-predictor/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please upload a file\");\n      return;\n    }\n\n    setError(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await axios.post(\"http://localhost:8000/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      // Log the response for debugging\n      console.log('Predictions:', response.data);\n\n      // Set predictions for rendering\n      setPredictions(response.data);\n\n    } catch (err) {\n      // Log detailed error information for debugging\n      console.error('Error uploading file or running predictions:', err);\n\n      // Handle different types of errors (network, server, etc.)\n      if (err.response) {\n        // The server responded with a status other than 2xx\n        setError(`Server Error: ${err.response.data.error || 'Unknown error'}`);\n      } else if (err.request) {\n        // The request was made, but no response was received\n        setError('Network Error: No response from server.');\n      } else {\n        // Something else caused the error\n        setError(`Error: ${err.message}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Stock Predictor</h1>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload and Predict</button>\n\n      {error && <p className=\"error\">{error}</p>}\n\n      <h2>Predictions:</h2>\n      {predictions.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Timestamp</th>\n              <th>Prediction</th>\n            </tr>\n          </thead>\n          <tbody>\n            {predictions.map((pred, index) => (\n              <tr key={index}>\n                <td>{pred.timestamp}</td>\n                <td>{pred.signal}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>No predictions yet</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}